---
layout: post
title: "C/C++"
---


### typdef struct: C에는 2개의 namespace가 있다.

1. ```tag name``` - struct, union, enum이 여기에 해당
2. ```typedef name``` - typedef한 모든 것


~~~ c
struct shape {
    int width ;
    int height ;
}

shape a ; // compile error
struct shape b ; // compile success
~~~


```shape```가 ```tag name```에만 정의되어 있다.
```shape a```와 같이 변수를 선언하려면 ```shape```가 type으로 정의되어 있어야 한다.(typedef)
그래서 다음과 같이 해준다.

``` c
struct shape {
    int width, height ;
}
// register struct shpe in the typedef namespace
// as a name "shape"
typedef struct shape shape ;
```
그런데 매번 이렇게 해주기 귀찮기 때문에 다음과 같이 줄일 수 있다.

``` c
typedef struct shape {
    int width, height ;
} shape ;
```

그럼 이제 shape라는 이름의 struct가 tag namespace와 typedef namespace에 모두 등록이 된다.

정리하자면

``` c
struct shape {...} // tag namespace에만 등록
typedef struct {...} shape // typedef namespace에만 등록
typedef struct shape {...} shape // tag namespace와 typedef namespace에 모두 등록
```

---
<br><br>


## 한 타입으로 동시에 여러개의 변수 선언시
``` c
typeddf struct shape {
    int width, height ;
    // int type 변수 두개
    shape * next, prev ;
    // next: shape * type
    // prev: shape type
}
```

### error 코드
``` c
typedef struct Edge {
    struct Edge * next ;
    Vertex * from,to ;
} Edge ;

Edge* createEdge( Vertex * from, Vertex * to ) {

    Edge* e = (Edge*)malloc( sizeof(Edge) );

    // allocation fail
    if( e == NULL )
        return NULL ;

    // init edge
    e->from = from ;
    e->to = to ;
    e->next = NULL ;
    return e ;
}
```

현재
e->from: Vertex * type 이지만
e->to: Vertex type 이라서 assign error가 뜬다.
![s](/img/2018-05-01-C-variable_declaration_error.png){:class="img-responsive"}

위의 코드가 의도한 대로 돌아가려면 다음과 같이 수정해주면 된다.

``` c
typedef struct Edge {
    struct Edge * next ;
    Vertex * from ;
    Vertex * to ;
} Edge ;
```


---
<br><br>
